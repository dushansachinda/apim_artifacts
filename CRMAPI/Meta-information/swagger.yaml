openapi: 3.0.1
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
 -
  url: http://localhost:8595/
security:
 -
  default: []
tags:
 -
  name: user-controller
  description: User Controller
paths:
  /api/users:
    get:
      tags:
       - user-controller
      summary: getAllUserrs
      operationId: getAllUserrsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    post:
      tags:
       - user-controller
      summary: createUser
      operationId: createUserUsingPOST
      requestBody:
        description: user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-codegen-request-body-name: user
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/users/ssn/{ssn}:
    get:
      tags:
       - user-controller
      summary: getUserBySSN
      operationId: getUserBySSNUsingGET
      parameters:
       -
        name: ssn
        in: path
        description: ssn
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
  /api/users/{userID}:
    get:
      tags:
       - user-controller
      summary: getUserByID
      operationId: getUserByIDUsingGET
      parameters:
       -
        name: userID
        in: path
        description: userID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    put:
      tags:
       - user-controller
      summary: updateUser
      operationId: updateUserUsingPUT
      parameters:
       -
        name: userID
        in: path
        description: userID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      requestBody:
        description: userDetails
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-codegen-request-body-name: userDetails
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
    delete:
      tags:
       - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      parameters:
       -
        name: userID
        in: path
        description: userID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: null
      x-wso2-application-security:
        security-types:
         - oauth2
        optional: false
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        city:
          type: string
        dob:
          type: string
        fullName:
          type: string
        isVerified:
          type: boolean
        ssn:
          type: string
        userID:
          type: integer
          format: int64
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
   - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
   - authorization
   - Access-Control-Allow-Origin
   - Content-Type
   - SOAPAction
   - apikey
  accessControlAllowMethods:
   - GET
   - PUT
   - POST
   - DELETE
   - PATCH
   - OPTIONS
x-wso2-production-endpoints:
  urls:
   - http://localhost:8595/
  type: http
x-wso2-sandbox-endpoints:
  urls:
   - http://localhost:8595/
  type: http
x-wso2-basePath: /userscrm/v1
x-wso2-transports:
 - http
 - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
